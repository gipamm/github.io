var mocha = require("mocha");
var request = require("supertest");
var app = require("./testapp");

describe("Testing simple format switch with Accept header", function() {
  it("respond with json", function(done) {
    request(app)
      .get("/simple")
      .set("Accept", "application/json")
      .expect("Content-Type", /application\/json/)
      .expect(200, {test: "ok"}, done);
  });
  it("respond with xml", function(done) {
    request(app)
      .get("/simple")
      .set("Accept", "text/xml")
      .expect("Content-Type", /text\/xml/)
      .expect(200, "<test>ok</test>", done);
  });
  it("respond with text", function(done) {
    request(app)
      .get("/simple")
      .set("Accept", "text/plain")
      .expect("Content-Type", /text\/plain/)
      .expect(200, "test was ok", done);
  });
});

describe("Testing simple format switch with .format", function() {
  it("respond with json", function(done) {
    request(app)
      .get("/simple.json")
      .expect("Content-Type", /application\/json/)
      .expect(200, {test: "ok"}, done);
  });
  it("respond with xml", function(done) {
    request(app)
      .get("/simple.xml")
      .expect("Content-Type", /text\/xml/)
      .expect(200, "<test>ok</test>", done);
  });
  it("respond with text", function(done) {
    request(app)
      .get("/simple.txt")
      .expect("Content-Type", /text\/plain/)
      .expect(200, "test was ok", done);
  });
});


describe("Testing custom format", function() {
  it("respond with json", function(done) {
    request(app)
      .get("/custom")
      .set("Accept", "application/json")
      .expect("Content-Type", /application\/json/)
      .expect(200, {test: "ok"}, done);
  });
  it("requesting application/test, expecting text/plain", function(done) {
    request(app)
      .get("/custom")
      .set("Accept", "application/test")
      .expect("Content-Type", /text\/plain/)
      .expect(200, "ok", done);
  });
});

describe("Testing before handler", function() {
  it("respond with json", function(done) {
    request(app)
      .get("/before")
      .set("Accept", "application/json")
      .expect("Content-Type", /application\/json/)
      .expect(200, {before_status: "lirum larum"}, done);
  });
  it("respond with text", function(done) {
    request(app)
      .get("/before")
      .set("Accept", "text/plain")
      .expect("Content-Type", /text\/plain/)
      .expect(200, "lirum larum", done);
  });
});

describe("Testing after handler", function() {
  it("respond with json", function(done) {
    request(app)
      .get("/after")
      .set("Accept", "application/json")
      .expect("Content-Type", /text\/plain/)
      .expect(200, "json", done);
  });
  it("respond with text", function(done) {
    request(app)
      .get("/after")
      .set("Accept", "text/plain")
      .expect("Content-Type", /text\/plain/)
      .expect(200, "text", done);
  });
});

describe("Testing full chain handler", function() {
  it("respond with json", function(done) {
    request(app)
      .get("/full")
      .set("Accept", "application/json")
      .expect("Content-Type", /text\/plain/)
      .expect(200, "before:json", done);
  });
  it("respond with text", function(done) {
    request(app)
      .get("/full")
      .set("Accept", "text/plain")
      .expect("Content-Type", /text\/plain/)
      .expect(200, "before:text", done);
  });
});

describe("Testing invalid formats", function() {
  it("no format (no .format and no Accept header)", function(done) {
    request(app)
      .get("/simple")
      .expect("Content-Type", /application\/json/)
      .expect(406, {"message": "Not acceptable"}, done);
  });
  it("non-existing format image/png", function(done) {
    request(app)
      .get("/simple")
      .set("Accept", "image/png")
      .expect("Content-Type", /application\/json/)
      .expect(406, {"message": "Not acceptable"}, done);
  });
  it("testing default format for /custom", function(done) {
    request(app)
      .get("/custom")
      .set("Accept", "image/png")
      .expect("Content-Type", /text\/plain/)
      .expect(200, "ok", done);
  });
  it("non-existing format image/png", function(done) {
    request(app)
      .get("/before")
      .set("Accept", "image/png")
      .expect("Content-Type", /text\/plain/)
      .expect(200, "default handler", done);
  });
});





